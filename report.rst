AWS環境でRocketChatを使用できる環境を構築する
=============================================

This is the content of the report. You can add sections, subsections, and other content as needed.

実施内容
---------

アーキテクト塾での作業内容を以下に記載する。

環境構築
~~~~~~~~
RocketChatをAWS上で利用するにあたって、以下の手順で環境を構築する。

	.. image:: ./images/RocketChatArchitect_1.png
	
以下のアーキテクチャだとRocket Chatへのアクセスが可能なのか？

	.. image:: ./images/RocketChatArchitect_2.png
	
#. VPCの作成
#. サブネットの作成
#. インターネットゲートウェイの作成
	* VPCにアタッチ（パブリックサブネット-VPC外の通信に必要）
#. NATゲートウェイの作成
	* パブリックサブネットにアタッチ（プライベートサブネット-VPC外の通信に必要(パブリックサブネットからインターネットゲートウェイを経由)）
#. ルートテーブルの作成
#. セキュリティグループの作成
	* SSH,HTTPのインバウンド接続を許可
#. EC2の作成
	* パブリックサブネットに作成
	* Linux、t2microを使用


問題点
--------

* Sphinxを用いて作成したhtmlとGithub上で公開しているhtmlの表示が一致しない。(テーマが適用されていない)

　→conf.pyのextensionsに["sphinx.ext.githubpages",]を記載することで解消

* Rocket Chatをインストールするインスタンスはプライベートサブネットとパブリックサブネットのどちらに作成するべきなのか？

　→プライベートサブネットに作成した場合はパブリックサブネットにNATインスタンスを構築して経由する必要がある。
　　どうしても隠す必要があるものはプライベートサブネット、それ以外はパブリックサブネットに構築がベーシックな考え方。
　　（パブリックサブネット＝家に置いておく、プライベートサブネット＝さらに金庫の中に入れる　みたいなイメージ）

